#include <U8x8lib.h>

#ifdef U8X8_HAVE_HW_SPI
#include <SPI.h>
#endif

U8X8_SSD1306_128X32_UNIVISION_HW_I2C u8x8(/* reset=*/ U8X8_PIN_NONE, /* clock=*/ SCL, /* data=*/ SDA);   // pin remapping with ESP8266 HW I2C

  int IR1 = 3;
  int IR2 = 4;
  //int LED = 13;
  int A_IA = 11;
  int A_IB = 10;
  int B_IA = 6;
  int B_IB = 5;
  int data;
 void setup(){
    pinMode(IR1, INPUT);
    pinMode(IR2, INPUT);
  //  pinMode(LED,OUTPUT);

    pinMode(A_IA,OUTPUT);
    pinMode(A_IB,OUTPUT);
    pinMode(B_IA,OUTPUT);
    pinMode(B_IB,OUTPUT);

    u8x8.begin();
    u8x8.setPowerSave(0);
    Serial.begin(9600);
  }
 void loop(){
    String sub_uga="";
    String uga="";
    if(Serial.available() > 0){
    uga = Serial.readStringUntil('\n');
    int start = uga.indexOf('a');  // 'a'의 인덱스번호 = 0
    int end = uga.indexOf('b');
    // substring 하기
    sub_uga = uga.substring(start+1,end);
    }
  u8x8.setFont(u8x8_font_chroma48medium8_r);
  u8x8.drawString(0,1,sub_uga.c_str());
  u8x8.refreshDisplay();    // only required for SSD1606/7
  data = sub_uga.toInt();
  delay(1000);
  analogWrite(A_IA,data);
  analogWrite(A_IB,0);
  analogWrite(B_IA,data);
  analogWrite(B_IB,0);
  
  if (data == 1){
    analogWrite(A_IA,0);
    analogWrite(A_IB,100);  
    analogWrite(B_IA,0);
    analogWrite(B_IB,0);
    delay(1000);
  }
  else if (data == 0){
    analogWrite(A_IA,0);
    analogWrite(A_IB,0);  
    analogWrite(B_IA,0);
    analogWrite(B_IB,100);
    delay(1000);
  }
}
